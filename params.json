{"name":"Hrv-biofeedback","tagline":"Heart rate variability biofeedback toolkit","body":"# HRV biofeedback\r\n[@joegle](https://twitter.com/Joegle) / [joegle.com](http://joegle.com)\r\n\r\nCollection of programs (written mostly in Python2) I've made for collecting live heart beat signal and processing it, suitable for prototyping heart rate \r\nvariability training applications.\r\n\r\nBiofeedback is the process of gaining greater awareness of physiological functions primarily using instruments that provide information on the activity of those same systems, with a goal of being able to manipulate them at will.\r\n\r\n## Links\r\n\r\n\r\n## Heart beat hardware\r\nThe hardware setup consists of:\r\n\r\n* Arduino Duemilanove microcontroller connected to Linux server with USB cord\r\n* Pulse Sensor Amped running off 5V and connected to Analog In 0 pin\r\n* Pulse Sensor clipped to ear lobe\r\n\r\n## Software and Firmware\r\nThe Arduino is loaded with modified Pulse Sensor firmware.\r\n\r\n\r\n## python-heart Module\r\nThe core of the server side data uplink is done with `heart.py` module depending on:\r\n\r\n* pySerial\r\n* NumPy\r\n\r\n### Usage\r\n```\r\nimport heart\r\nmonitor = heart.Heartbeat_Monitor(\"/dev/ttyUSB0\")\r\nmonitor.start()\r\n```\r\n\r\nOr\r\n\r\n```\r\n$ python2 -m heart\r\n```\r\n\r\n\r\n# Tips\r\n```sh\r\n$ stty -F /dev/ttyUSB0 cs7 cstopb -ixon raw speed 115200```\r\n$ cat /dev/ttyUSB0\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}